@page
@using CoinR.Views.Home
@using System.Security.Policy
@model CoinR.Views.Home.Currencydetails

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!DOCTYPE html>

<html>
<head>
    <title>@Currencydetails._currency</title>
</head>
<body>
<div class="detailswrapper">

    <div class="left">
        <div class="subleft">
            <h1 class="currencynamedetail currencyname">@Currencydetails.getCurrencyName()</h1>
            <img class="currencylogodetail" src="@Currencydetails.getCurrencyLogo()"/>
        </div>

        <div class="subleftnewline">
            <h4 class="rating ratingtext">RATING</h4>
            <p class="rating" id="ratingvalue">@Currencydetails.getCurrencyRating()</p>
        </div>


    </div>
    <div class="right">
        <div class="subleftnewline">
            <h4 class="prediction">PREDICTION</h4>
            <div class="subleftmini">
                <p>PRICE</p>
            </div>
            <div class="subrightmini">
                <p class="predictionprice">@Currencydetails.getPredictionPrice()</p>
            </div>
        </div>
        <div class="subright">
            @using (Html.BeginForm("BuyPrediction","Home",new { currency=@Currencydetails._currency}))
            {
                <button class="buypredictionbtn" id="predictionbtn" type="submit" value="buy prediction"> 
                    BUY PREDICTION
                    <p class="fas fa-chevron-circle-right"></p>
                </button>   
            }
        </div>


    </div>
    <div class="chartcontainer">
        <div class="currencychartdetail">
            <canvas class="chart"></canvas>
        </div>
    </div>
</div>

</body>
<script type="text/javascript"> 
        let array = []; 
        let chart = null;
        var data = null;
        var labelstring = @Html.Raw(Home.generateLabels(Currencydetails.getCurrencyChartCount()));
            $(function () {  
        var chartName = "chart";  
 
                var ctx = document.getElementsByClassName(chartName)[0]; 
                
                    array = @Html.Raw(Currencydetails.getCurrencyChart());
                    console.log(array);
                                data = {  
                                        labels: labelstring,  
                                        datasets: [{  
                                            label: @Html.Raw(Currencydetails.getChartName()) + "chart",
                                            backgroundColor: [  
                                                "rgb(225,225,5,0.5)",  
                                            ],  
                                            borderColor: [  
                                                "rgb(225,225,5)",
                                                "rgb(225,225,5,0.5)"    
                                            ],  
                                            borderWidth: 1,
                                            data: array,
                                                                       
                                        }]  
                                    };  
                          
                        var options = {  
                                        maintainAspectRatio: false,
                                        scales: {  
                                            yAxes: [{  
                                                ticks: {  
                                                    min: 0,  
                                                    beginAtZero: true  
                                                },  
                                                gridLines: {  
                                                    display: true,  
                                                    color: "rgb(225,225,5,0.5)"  
                                                },
                        }],  
                                            xAxes: [{  
                                                ticks: {  
                                                    min: 0,  
                                                    beginAtZero: true  
                                                },  
                                                gridLines: {  
                                                    display: false  
                                                }  
                                            }]  
                                        }  
                                    }; 
                chart = new  Chart(ctx.getContext('2d'), {  
                                                    options: options,  
                                                    data: data,
                                                    type:'line'  
                                                });
            });
            console.log("LABELS" + labelstring);

            $(function(){
                
            let ratingvalue = document.getElementById("ratingvalue");
            if(ratingvalue.innerText == "buy"){
                ratingvalue.classList.add("green");    
            }
            else if (ratingvalue.innerText == "sell"){
                ratingvalue.classList.add("red");    
            }
            else if (ratingvalue.innerText == "outperform"){
                ratingvalue.classList.add("yellow");    
            }
            });
            
    </script>
</html>