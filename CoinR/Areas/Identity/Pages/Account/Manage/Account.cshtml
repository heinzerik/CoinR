@page
@using System.Security.Claims
@using CoinR.Controllers
@using CoinR.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.CodeAnalysis
@using Microsoft.JSInterop
@model CoinR.Models.BookPurchaseVM;
<div class="fullwidth">
    <div class="left">
        <h1 class="greeting">Hi</h1>
        <h1 class="yellow greeting">@User.FindFirst(ClaimTypes.Name).Value</h1>
        <h1 class="greeting">!</h1>

    </div>

    <div class="right">
        <h1>CURRENT BALANCE</h1>
        <div class="col-12">
            <h2 class="d-inline">CoinR Account: </h2>
            <h2 class="d-inline green">2523,13â‚¬</h2>
        </div>
    </div>
</div>

<div class="fullwidth">
    <div class="left">
        <h1 class="AccountdescriptionElements">YOUR WATCHLIST</h1>


        <div class="accountdetailsContainer">
            @if (ViewData["Error"] != "")
            {
                <p class="text-danger errormsg">@ViewData["Error"]</p>
            }
            <table class="watchlist">
                <thead>
                <td class="col-5"></td>
                <td class="col-4">Price</td>
                <td class="col-4">Rating</td>
                <td class="col-1"></td>
                </thead>
                <tbody>
                @{
                    int i = 1;


                    @foreach (var currency in Account.watchlist)
                    {
                        <form asp-action="RemoveFromWatchlist" asp-controller="Home" method="post" enctype="multipart/form-data">
                            <tr>
                                <td>#@i @currency.Text</td>
                                <td>@CryptoCurrencyService.getPriceByName(@currency.Value) @CryptoCurrencyService.getCurrencySymbol()</td>
                                <td class="ratingvalue">@CryptoCurrencyService.getByName(@currency.Value).rating</td>
                                <td>
                                    <input type="text" name="curr" style="display: none" value="@currency.Text"/>
                                    <button class="fas fa-times-circle removebtn" type="submit" asp-page-handler="Submit" value="Submit"/>
                                </td>

                            </tr>
                        </form>

                        i++;
                    }


                }

                </tbody>
            </table>
        </div>
        <h1 class="AccountdescriptionElements">ADD TO WATCHLIST</h1>
        <div class="accountdetailsContainerNarrow">

            <form asp-action="AddToWatchList" asp-controller="Home" method="post" enctype="multipart/form-data">
                <asp:dropdownlist>
                    <select id="currencyselect" asp-for="Price" asp-items="Account.currencies" name="currency" onchange="getSelectedCurrency()"></select>
                </asp:dropdownlist>
                <button class="watchlistbtn" type="submit" asp-page-handler="Submit" value="submit">ADD</button>

            </form>
        </div>
    </div>


    <div class="right">
        <h1 class="AccountdescriptionElements">DEPOSIT MONEY</h1>
        <div class="accountdetailsContainerBig">
            @* <form asp-controller="Home" method="post" enctype="multipart/form-data" id="payment-form"> *@
            @*     @Html.HiddenFor(n => n.Id) *@
            @*     <table class="table table-borderless depositmoneytable"> *@
            @*         <tbody> *@
            @*         <tr> *@
            @*             <td>CARD NUMBER</td> *@
            @*             <td>CCV</td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td class="depositmoneytd"> *@
            @*                 <input type="text" name="cardnumber" size="18" id="cardnumber" minlength="19" maxlength="19" placeholder="1111-2222-3333-4444" class="depositmoneyinput"/> *@
            @*             </td> *@
            @*             <td class="depositmoneytd"> *@
            @*                 <input type="password" name="ccv" size="1" minlength="3" maxlength="3" placeholder="CCV" class="depositmoneyinput"/> *@
            @*             </td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td class="depositmoneytd">CARD HOLDER</td> *@
            @*             <td class="depositmoneytd">EXPIRATION DATE</td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td class="depositmoneytd"> *@
            @*                 <input type="text" name="cardholder" placeholder="card holder" class="depositmoneyinput"/> *@
            @*             </td> *@
            @*             <td class="depositmoneytd"> *@
            @*                 <input type="date" name="expirationdate" placeholder="expiration date" class="depositmoneyinput"/> *@
            @*             </td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td colspan="2" class="depositmoneytd">AMOUNT</td> *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td colspan="2" class="depositmoneytd"> *@
            @*                 <input type="number" name="amoount" min="1" step="any" class="depositmoneyAmountInput" placeholder="Amount"/> *@
            @*             </td> *@
            @*             @Html.HiddenFor(n => n.Id) *@
            @*             <section> *@
            @*                 <div class="bt-drop-in-wrapper"> *@
            @*                     <div id="bt-dropin"></div> *@
            @*                 </div> *@
            @*             </section> *@
            @*             @Html.HiddenFor(n => n.Nonce, new {@id = "nonce"}) *@
            @* *@
            @*         </tr> *@
            @*         <tr> *@
            @*             <td colspan="2" class="depositmoneytd"> *@
            @*                 <button class="watchlistbtn" type="submit" asp-page-handler="Cancel" value="cancel">DEPOSIT</button> *@
            @*             </td> *@
            @*         </tr> *@
            @*         </tbody> *@
            @*     </table> *@
            @* </form> *@
            
           <iframe src="/Home/Payment"></iframe>
        </div>
    </div>
</div>
@if (ViewBag.Message != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>
}
<script src="https://js.braintreegateway.com/web/dropin/1.22.0/js/dropin.min.js"></script>
<script>
$(function(){
                            
                        let ratingvalues = document.getElementsByClassName("ratingvalue");
                        for (i = 0; i < ratingvalues.length;i++){
                            if(ratingvalues[i].innerText == "buy"){
                               ratingvalues[i].classList.add("green");    
                             }
                             else if (ratingvalues[i].innerText == "sell"){
                               ratingvalues[i].classList.add("red");    
                             }
                             else if (ratingvalues[i].innerText == "outperform"){
                              ratingvalues[i].classList.add("yellow");    
                             }
                           }
                        });


function sendSelectedCurrency()
    {
      let a  = $( "#currencyselect option:selected" ).text();
      console.log(a);
      
    }
    
    $(document).ready(function(){
    
    //For Card Number formatted input
    var cardNum = document.getElementById('cardnumber');
    cardNum.onkeyup = function (e) {
        if (this.value == this.lastValue) return;
        var caretPosition = this.selectionStart;
        var sanitizedValue = this.value.replace(/[^0-9]/gi, '');
        var parts = [];
        
        for (var i = 0, len = sanitizedValue.length; i < len; i += 4) {
            parts.push(sanitizedValue.substring(i, i + 4));
        }
        
        for (var i = caretPosition - 1; i >= 0; i--) {
            var c = this.value[i];
            if (c < '0' || c > '9') {
                caretPosition--;
            }
        }
        caretPosition += Math.floor(caretPosition / 4);
        
        this.value = this.lastValue = parts.join(' ');
        this.selectionStart = this.selectionEnd = caretPosition;
    }
    });

    var client_token = ViewData["ClientToken"];
        var form = document.querySelector('#payment-form');
    
        braintree.dropin.create({
            authorization: client_token,
            container: '#bt-dropin'
        }, function (createErr, instance) {
            form.addEventListener('submit', function (event) {
                event.preventDefault();
    
                instance.requestPaymentMethod(function (err, payload) {
                    if (err) {
                        return;
                    }
                  
                    document.querySelector('#nonce').value = payload.nonce;
                    form.submit();
                });
            });
        });

</script>